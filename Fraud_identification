{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9775239,"sourceType":"datasetVersion","datasetId":5988050}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/yingfu46/financial-transactions-analysis?scriptVersionId=233466468\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# Bedrägeri och bedragare i finanstransaktioner: en övning \n\nData är från https://www.kaggle.com/datasets/computingvictor/transactions-fraud-datasets, vilka är förberedda till ett AI Hackathon.","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:08:25.933534Z","iopub.execute_input":"2025-04-12T13:08:25.933796Z","iopub.status.idle":"2025-04-12T13:08:27.051216Z","shell.execute_reply.started":"2025-04-12T13:08:25.933766Z","shell.execute_reply":"2025-04-12T13:08:27.050242Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/transactions-fraud-datasets/mcc_codes.json\n/kaggle/input/transactions-fraud-datasets/users_data.csv\n/kaggle/input/transactions-fraud-datasets/transactions_data.csv\n/kaggle/input/transactions-fraud-datasets/cards_data.csv\n/kaggle/input/transactions-fraud-datasets/train_fraud_labels.json\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"## 0. Importera Python paket vid behov ","metadata":{}},{"cell_type":"code","source":"import sklearn\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom datetime import datetime\nprint(f\"Start vid {datetime.now()}\")\n\nimport statsmodels.api as sm\n\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.impute import SimpleImputer, KNNImputer\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder, PolynomialFeatures, StandardScaler, MinMaxScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression, SGDClassifier\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.model_selection import cross_val_score, RandomizedSearchCV, GridSearchCV\nfrom sklearn.inspection import permutation_importance","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:08:27.052364Z","iopub.execute_input":"2025-04-12T13:08:27.052723Z","iopub.status.idle":"2025-04-12T13:08:31.143484Z","shell.execute_reply.started":"2025-04-12T13:08:27.052701Z","shell.execute_reply":"2025-04-12T13:08:31.141767Z"}},"outputs":[{"name":"stdout","text":"Start vid 2025-04-12 13:08:28.280308\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"## 1. Hämta, rensa, och bearbeta data\nTransaktionsdata kan vara ganska stora. Fundera på om man vill analysera ett år i taget.","metadata":{}},{"cell_type":"code","source":"trans_data1 = pd.read_csv('/kaggle/input/transactions-fraud-datasets/transactions_data.csv', header =0)\ntrans_data1.tail(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:08:31.144987Z","iopub.execute_input":"2025-04-12T13:08:31.145551Z","iopub.status.idle":"2025-04-12T13:09:03.778995Z","shell.execute_reply.started":"2025-04-12T13:08:31.145515Z","shell.execute_reply":"2025-04-12T13:09:03.77798Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"                id                 date  client_id  card_id  amount  \\\n13305910  23761868  2019-10-31 23:56:00       1718     2379   $1.11   \n13305911  23761869  2019-10-31 23:56:00       1766     2066  $12.80   \n13305912  23761870  2019-10-31 23:57:00        199     1031  $40.44   \n13305913  23761873  2019-10-31 23:58:00       1986     5443   $4.00   \n13305914  23761874  2019-10-31 23:59:00        489     5697  $12.88   \n\n                    use_chip  merchant_id merchant_city merchant_state  \\\n13305910    Chip Transaction        86438   West Covina             CA   \n13305911  Online Transaction        39261        ONLINE            NaN   \n13305912   Swipe Transaction         2925         Allen             TX   \n13305913    Chip Transaction        46284     Daly City             CA   \n13305914    Chip Transaction        24658    Greenbrier             TN   \n\n              zip   mcc errors  \n13305910  91792.0  5499    NaN  \n13305911      NaN  5815    NaN  \n13305912  75002.0  4900    NaN  \n13305913  94014.0  5411    NaN  \n13305914  37073.0  5921    NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>client_id</th>\n      <th>card_id</th>\n      <th>amount</th>\n      <th>use_chip</th>\n      <th>merchant_id</th>\n      <th>merchant_city</th>\n      <th>merchant_state</th>\n      <th>zip</th>\n      <th>mcc</th>\n      <th>errors</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>13305910</th>\n      <td>23761868</td>\n      <td>2019-10-31 23:56:00</td>\n      <td>1718</td>\n      <td>2379</td>\n      <td>$1.11</td>\n      <td>Chip Transaction</td>\n      <td>86438</td>\n      <td>West Covina</td>\n      <td>CA</td>\n      <td>91792.0</td>\n      <td>5499</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13305911</th>\n      <td>23761869</td>\n      <td>2019-10-31 23:56:00</td>\n      <td>1766</td>\n      <td>2066</td>\n      <td>$12.80</td>\n      <td>Online Transaction</td>\n      <td>39261</td>\n      <td>ONLINE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5815</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13305912</th>\n      <td>23761870</td>\n      <td>2019-10-31 23:57:00</td>\n      <td>199</td>\n      <td>1031</td>\n      <td>$40.44</td>\n      <td>Swipe Transaction</td>\n      <td>2925</td>\n      <td>Allen</td>\n      <td>TX</td>\n      <td>75002.0</td>\n      <td>4900</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13305913</th>\n      <td>23761873</td>\n      <td>2019-10-31 23:58:00</td>\n      <td>1986</td>\n      <td>5443</td>\n      <td>$4.00</td>\n      <td>Chip Transaction</td>\n      <td>46284</td>\n      <td>Daly City</td>\n      <td>CA</td>\n      <td>94014.0</td>\n      <td>5411</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13305914</th>\n      <td>23761874</td>\n      <td>2019-10-31 23:59:00</td>\n      <td>489</td>\n      <td>5697</td>\n      <td>$12.88</td>\n      <td>Chip Transaction</td>\n      <td>24658</td>\n      <td>Greenbrier</td>\n      <td>TN</td>\n      <td>37073.0</td>\n      <td>5921</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"### 1.1 Kolla på data för transaktioner\n\n#### 1.1.1. Inspektera data","metadata":{}},{"cell_type":"code","source":"trans_data1.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:03.780372Z","iopub.execute_input":"2025-04-12T13:09:03.780678Z","iopub.status.idle":"2025-04-12T13:09:03.806593Z","shell.execute_reply.started":"2025-04-12T13:09:03.780651Z","shell.execute_reply":"2025-04-12T13:09:03.805178Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 13305915 entries, 0 to 13305914\nData columns (total 12 columns):\n #   Column          Dtype  \n---  ------          -----  \n 0   id              int64  \n 1   date            object \n 2   client_id       int64  \n 3   card_id         int64  \n 4   amount          object \n 5   use_chip        object \n 6   merchant_id     int64  \n 7   merchant_city   object \n 8   merchant_state  object \n 9   zip             float64\n 10  mcc             int64  \n 11  errors          object \ndtypes: float64(1), int64(5), object(6)\nmemory usage: 1.2+ GB\n","output_type":"stream"}],"execution_count":4},{"cell_type":"markdown","source":"Problem in data: \"date\" och \"amount\" ska inte vara \"object\", \"zip\" ska inte vara \"float64\". ","metadata":{}},{"cell_type":"code","source":"trans_data1.replace(r\"['$']\", '', regex = True, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:03.807548Z","iopub.execute_input":"2025-04-12T13:09:03.807868Z","iopub.status.idle":"2025-04-12T13:09:33.094115Z","shell.execute_reply.started":"2025-04-12T13:09:03.807843Z","shell.execute_reply":"2025-04-12T13:09:33.092952Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"trans_data1['amount'] = trans_data1['amount'].astype('float32')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:33.097271Z","iopub.execute_input":"2025-04-12T13:09:33.097575Z","iopub.status.idle":"2025-04-12T13:09:34.116239Z","shell.execute_reply.started":"2025-04-12T13:09:33.097549Z","shell.execute_reply":"2025-04-12T13:09:34.114831Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"# Eftersom det finns saknade värden i zip, kan man inte direkt fixa zip-kolumnen.\n#trans_data1['zip'] = trans_data1['zip'].astype('int')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:34.117953Z","iopub.execute_input":"2025-04-12T13:09:34.118283Z","iopub.status.idle":"2025-04-12T13:09:34.133409Z","shell.execute_reply.started":"2025-04-12T13:09:34.118257Z","shell.execute_reply":"2025-04-12T13:09:34.132326Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"trans_data1['datum'] = pd.to_datetime(trans_data1['date']).dt.date\ntrans_data1['klocka'] = pd.to_datetime(trans_data1['date']).dt.time","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:34.13427Z","iopub.execute_input":"2025-04-12T13:09:34.134508Z","iopub.status.idle":"2025-04-12T13:09:54.490346Z","shell.execute_reply.started":"2025-04-12T13:09:34.134487Z","shell.execute_reply":"2025-04-12T13:09:54.489425Z"}},"outputs":[],"execution_count":8},{"cell_type":"markdown","source":"**Kolla igen om ändringar har slagit igenom**","metadata":{}},{"cell_type":"code","source":"trans_data1.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:54.491085Z","iopub.execute_input":"2025-04-12T13:09:54.491365Z","iopub.status.idle":"2025-04-12T13:09:54.50096Z","shell.execute_reply.started":"2025-04-12T13:09:54.491339Z","shell.execute_reply":"2025-04-12T13:09:54.499973Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 13305915 entries, 0 to 13305914\nData columns (total 14 columns):\n #   Column          Dtype  \n---  ------          -----  \n 0   id              int64  \n 1   date            object \n 2   client_id       int64  \n 3   card_id         int64  \n 4   amount          float32\n 5   use_chip        object \n 6   merchant_id     int64  \n 7   merchant_city   object \n 8   merchant_state  object \n 9   zip             float64\n 10  mcc             int64  \n 11  errors          object \n 12  datum           object \n 13  klocka          object \ndtypes: float32(1), float64(1), int64(5), object(7)\nmemory usage: 1.3+ GB\n","output_type":"stream"}],"execution_count":9},{"cell_type":"code","source":"trans_data1.head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:54.501628Z","iopub.execute_input":"2025-04-12T13:09:54.501896Z","iopub.status.idle":"2025-04-12T13:09:54.530665Z","shell.execute_reply.started":"2025-04-12T13:09:54.501875Z","shell.execute_reply":"2025-04-12T13:09:54.52904Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"        id                 date  client_id  card_id      amount  \\\n0  7475327  2010-01-01 00:01:00       1556     2972  -77.000000   \n1  7475328  2010-01-01 00:02:00        561     4575   14.570000   \n2  7475329  2010-01-01 00:02:00       1129      102   80.000000   \n3  7475331  2010-01-01 00:05:00        430     2860  200.000000   \n4  7475332  2010-01-01 00:06:00        848     3915   46.410000   \n5  7475333  2010-01-01 00:07:00       1807      165    4.810000   \n6  7475334  2010-01-01 00:09:00       1556     2972   77.000000   \n7  7475335  2010-01-01 00:14:00       1684     2140   26.459999   \n8  7475336  2010-01-01 00:21:00        335     5131  261.579987   \n9  7475337  2010-01-01 00:21:00        351     1112   10.740000   \n\n             use_chip  merchant_id merchant_city merchant_state      zip  \\\n0   Swipe Transaction        59935        Beulah             ND  58523.0   \n1   Swipe Transaction        67570    Bettendorf             IA  52722.0   \n2   Swipe Transaction        27092         Vista             CA  92084.0   \n3   Swipe Transaction        27092   Crown Point             IN  46307.0   \n4   Swipe Transaction        13051       Harwood             MD  20776.0   \n5   Swipe Transaction        20519         Bronx             NY  10464.0   \n6   Swipe Transaction        59935        Beulah             ND  58523.0   \n7  Online Transaction        39021        ONLINE            NaN      NaN   \n8  Online Transaction        50292        ONLINE            NaN      NaN   \n9   Swipe Transaction         3864      Flushing             NY  11355.0   \n\n    mcc errors       datum    klocka  \n0  5499    NaN  2010-01-01  00:01:00  \n1  5311    NaN  2010-01-01  00:02:00  \n2  4829    NaN  2010-01-01  00:02:00  \n3  4829    NaN  2010-01-01  00:05:00  \n4  5813    NaN  2010-01-01  00:06:00  \n5  5942    NaN  2010-01-01  00:07:00  \n6  5499    NaN  2010-01-01  00:09:00  \n7  4784    NaN  2010-01-01  00:14:00  \n8  7801    NaN  2010-01-01  00:21:00  \n9  5813    NaN  2010-01-01  00:21:00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>client_id</th>\n      <th>card_id</th>\n      <th>amount</th>\n      <th>use_chip</th>\n      <th>merchant_id</th>\n      <th>merchant_city</th>\n      <th>merchant_state</th>\n      <th>zip</th>\n      <th>mcc</th>\n      <th>errors</th>\n      <th>datum</th>\n      <th>klocka</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7475327</td>\n      <td>2010-01-01 00:01:00</td>\n      <td>1556</td>\n      <td>2972</td>\n      <td>-77.000000</td>\n      <td>Swipe Transaction</td>\n      <td>59935</td>\n      <td>Beulah</td>\n      <td>ND</td>\n      <td>58523.0</td>\n      <td>5499</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:01:00</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7475328</td>\n      <td>2010-01-01 00:02:00</td>\n      <td>561</td>\n      <td>4575</td>\n      <td>14.570000</td>\n      <td>Swipe Transaction</td>\n      <td>67570</td>\n      <td>Bettendorf</td>\n      <td>IA</td>\n      <td>52722.0</td>\n      <td>5311</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:02:00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7475329</td>\n      <td>2010-01-01 00:02:00</td>\n      <td>1129</td>\n      <td>102</td>\n      <td>80.000000</td>\n      <td>Swipe Transaction</td>\n      <td>27092</td>\n      <td>Vista</td>\n      <td>CA</td>\n      <td>92084.0</td>\n      <td>4829</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:02:00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7475331</td>\n      <td>2010-01-01 00:05:00</td>\n      <td>430</td>\n      <td>2860</td>\n      <td>200.000000</td>\n      <td>Swipe Transaction</td>\n      <td>27092</td>\n      <td>Crown Point</td>\n      <td>IN</td>\n      <td>46307.0</td>\n      <td>4829</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:05:00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7475332</td>\n      <td>2010-01-01 00:06:00</td>\n      <td>848</td>\n      <td>3915</td>\n      <td>46.410000</td>\n      <td>Swipe Transaction</td>\n      <td>13051</td>\n      <td>Harwood</td>\n      <td>MD</td>\n      <td>20776.0</td>\n      <td>5813</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:06:00</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7475333</td>\n      <td>2010-01-01 00:07:00</td>\n      <td>1807</td>\n      <td>165</td>\n      <td>4.810000</td>\n      <td>Swipe Transaction</td>\n      <td>20519</td>\n      <td>Bronx</td>\n      <td>NY</td>\n      <td>10464.0</td>\n      <td>5942</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:07:00</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7475334</td>\n      <td>2010-01-01 00:09:00</td>\n      <td>1556</td>\n      <td>2972</td>\n      <td>77.000000</td>\n      <td>Swipe Transaction</td>\n      <td>59935</td>\n      <td>Beulah</td>\n      <td>ND</td>\n      <td>58523.0</td>\n      <td>5499</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:09:00</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7475335</td>\n      <td>2010-01-01 00:14:00</td>\n      <td>1684</td>\n      <td>2140</td>\n      <td>26.459999</td>\n      <td>Online Transaction</td>\n      <td>39021</td>\n      <td>ONLINE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4784</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:14:00</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>7475336</td>\n      <td>2010-01-01 00:21:00</td>\n      <td>335</td>\n      <td>5131</td>\n      <td>261.579987</td>\n      <td>Online Transaction</td>\n      <td>50292</td>\n      <td>ONLINE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>7801</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:21:00</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7475337</td>\n      <td>2010-01-01 00:21:00</td>\n      <td>351</td>\n      <td>1112</td>\n      <td>10.740000</td>\n      <td>Swipe Transaction</td>\n      <td>3864</td>\n      <td>Flushing</td>\n      <td>NY</td>\n      <td>11355.0</td>\n      <td>5813</td>\n      <td>NaN</td>\n      <td>2010-01-01</td>\n      <td>00:21:00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"markdown","source":"#### 1.1.2. Hantera saknade värde ","metadata":{}},{"cell_type":"markdown","source":"**Kolla på antal saknade värden**","metadata":{}},{"cell_type":"code","source":"trans_data1.isna().sum(axis=0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:54.531818Z","iopub.execute_input":"2025-04-12T13:09:54.532143Z","iopub.status.idle":"2025-04-12T13:09:57.361951Z","shell.execute_reply.started":"2025-04-12T13:09:54.532117Z","shell.execute_reply":"2025-04-12T13:09:57.360675Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"id                       0\ndate                     0\nclient_id                0\ncard_id                  0\namount                   0\nuse_chip                 0\nmerchant_id              0\nmerchant_city            0\nmerchant_state     1563700\nzip                1652706\nmcc                      0\nerrors            13094522\ndatum                    0\nklocka                   0\ndtype: int64"},"metadata":{}}],"execution_count":11},{"cell_type":"markdown","source":"OBS: det finns många olika sätt att handera saknade värden. I det här fallet, verkar det som att det huvudsakligen beror på ehandeln. Skulle vi kunna skapa en särskild kategori \"merchant_state\" och \"zip\" för ehandel?","metadata":{}},{"cell_type":"code","source":"trans_data1.loc[ trans_data1['merchant_city'].str.upper() =='ONLINE','merchant_state'] = \"WB\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:09:57.362994Z","iopub.execute_input":"2025-04-12T13:09:57.36328Z","iopub.status.idle":"2025-04-12T13:10:00.396036Z","shell.execute_reply.started":"2025-04-12T13:09:57.363254Z","shell.execute_reply":"2025-04-12T13:10:00.394814Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"trans_data1.loc[ trans_data1['merchant_city'].str.upper() =='ONLINE','zip'] = \"11111\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:10:00.397171Z","iopub.execute_input":"2025-04-12T13:10:00.397433Z","iopub.status.idle":"2025-04-12T13:10:03.951916Z","shell.execute_reply.started":"2025-04-12T13:10:00.397408Z","shell.execute_reply":"2025-04-12T13:10:03.950836Z"}},"outputs":[],"execution_count":13},{"cell_type":"markdown","source":"Kolla igen antal saknade värden","metadata":{}},{"cell_type":"code","source":"trans_data1.isna().sum(axis=0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:10:03.953289Z","iopub.execute_input":"2025-04-12T13:10:03.953625Z","iopub.status.idle":"2025-04-12T13:10:06.980288Z","shell.execute_reply.started":"2025-04-12T13:10:03.953596Z","shell.execute_reply":"2025-04-12T13:10:06.979164Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"id                       0\ndate                     0\nclient_id                0\ncard_id                  0\namount                   0\nuse_chip                 0\nmerchant_id              0\nmerchant_city            0\nmerchant_state           0\nzip                  89006\nmcc                      0\nerrors            13094522\ndatum                    0\nklocka                   0\ndtype: int64"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"trans_data1.tail()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:10:06.981034Z","iopub.execute_input":"2025-04-12T13:10:06.981261Z","iopub.status.idle":"2025-04-12T13:10:06.995464Z","shell.execute_reply.started":"2025-04-12T13:10:06.981241Z","shell.execute_reply":"2025-04-12T13:10:06.994484Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"                id                 date  client_id  card_id     amount  \\\n13305910  23761868  2019-10-31 23:56:00       1718     2379   1.110000   \n13305911  23761869  2019-10-31 23:56:00       1766     2066  12.800000   \n13305912  23761870  2019-10-31 23:57:00        199     1031  40.439999   \n13305913  23761873  2019-10-31 23:58:00       1986     5443   4.000000   \n13305914  23761874  2019-10-31 23:59:00        489     5697  12.880000   \n\n                    use_chip  merchant_id merchant_city merchant_state  \\\n13305910    Chip Transaction        86438   West Covina             CA   \n13305911  Online Transaction        39261        ONLINE             WB   \n13305912   Swipe Transaction         2925         Allen             TX   \n13305913    Chip Transaction        46284     Daly City             CA   \n13305914    Chip Transaction        24658    Greenbrier             TN   \n\n              zip   mcc errors       datum    klocka  \n13305910  91792.0  5499    NaN  2019-10-31  23:56:00  \n13305911    11111  5815    NaN  2019-10-31  23:56:00  \n13305912  75002.0  4900    NaN  2019-10-31  23:57:00  \n13305913  94014.0  5411    NaN  2019-10-31  23:58:00  \n13305914  37073.0  5921    NaN  2019-10-31  23:59:00  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>client_id</th>\n      <th>card_id</th>\n      <th>amount</th>\n      <th>use_chip</th>\n      <th>merchant_id</th>\n      <th>merchant_city</th>\n      <th>merchant_state</th>\n      <th>zip</th>\n      <th>mcc</th>\n      <th>errors</th>\n      <th>datum</th>\n      <th>klocka</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>13305910</th>\n      <td>23761868</td>\n      <td>2019-10-31 23:56:00</td>\n      <td>1718</td>\n      <td>2379</td>\n      <td>1.110000</td>\n      <td>Chip Transaction</td>\n      <td>86438</td>\n      <td>West Covina</td>\n      <td>CA</td>\n      <td>91792.0</td>\n      <td>5499</td>\n      <td>NaN</td>\n      <td>2019-10-31</td>\n      <td>23:56:00</td>\n    </tr>\n    <tr>\n      <th>13305911</th>\n      <td>23761869</td>\n      <td>2019-10-31 23:56:00</td>\n      <td>1766</td>\n      <td>2066</td>\n      <td>12.800000</td>\n      <td>Online Transaction</td>\n      <td>39261</td>\n      <td>ONLINE</td>\n      <td>WB</td>\n      <td>11111</td>\n      <td>5815</td>\n      <td>NaN</td>\n      <td>2019-10-31</td>\n      <td>23:56:00</td>\n    </tr>\n    <tr>\n      <th>13305912</th>\n      <td>23761870</td>\n      <td>2019-10-31 23:57:00</td>\n      <td>199</td>\n      <td>1031</td>\n      <td>40.439999</td>\n      <td>Swipe Transaction</td>\n      <td>2925</td>\n      <td>Allen</td>\n      <td>TX</td>\n      <td>75002.0</td>\n      <td>4900</td>\n      <td>NaN</td>\n      <td>2019-10-31</td>\n      <td>23:57:00</td>\n    </tr>\n    <tr>\n      <th>13305913</th>\n      <td>23761873</td>\n      <td>2019-10-31 23:58:00</td>\n      <td>1986</td>\n      <td>5443</td>\n      <td>4.000000</td>\n      <td>Chip Transaction</td>\n      <td>46284</td>\n      <td>Daly City</td>\n      <td>CA</td>\n      <td>94014.0</td>\n      <td>5411</td>\n      <td>NaN</td>\n      <td>2019-10-31</td>\n      <td>23:58:00</td>\n    </tr>\n    <tr>\n      <th>13305914</th>\n      <td>23761874</td>\n      <td>2019-10-31 23:59:00</td>\n      <td>489</td>\n      <td>5697</td>\n      <td>12.880000</td>\n      <td>Chip Transaction</td>\n      <td>24658</td>\n      <td>Greenbrier</td>\n      <td>TN</td>\n      <td>37073.0</td>\n      <td>5921</td>\n      <td>NaN</td>\n      <td>2019-10-31</td>\n      <td>23:59:00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":15},{"cell_type":"markdown","source":"Mycket bättre. Vi kan se att alla saknade värden i \"merchant_state\" beror på ehandeln, och \"zip\" till en stor del. Vad händer i \"errors\"? (Vi kommer att ta bort den senare).","metadata":{}},{"cell_type":"markdown","source":"#### 1.1.4 Ta bort vissa kolumner\n\nDet skulle vara bättre att ta bort kolumner efter \"feature engineering\". Men eftersom transaktionsdata är för stora, tar vi bort vissa kolumner före \"merge\".","metadata":{}},{"cell_type":"code","source":"#trans_data1.drop(['date', 'merchant_city','merchant_id','errors'], axis=1, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:53.148672Z","iopub.execute_input":"2025-04-11T05:40:53.14902Z","iopub.status.idle":"2025-04-11T05:40:54.189458Z","shell.execute_reply.started":"2025-04-11T05:40:53.148981Z","shell.execute_reply":"2025-04-11T05:40:54.188352Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 1.2 Data för kreditkort ","metadata":{}},{"cell_type":"code","source":"cards_data = pd.read_csv(\"/kaggle/input/transactions-fraud-datasets/cards_data.csv\", header =0)\ncards_data.tail()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:24:11.632361Z","iopub.execute_input":"2025-04-12T13:24:11.632674Z","iopub.status.idle":"2025-04-12T13:24:11.67482Z","shell.execute_reply.started":"2025-04-12T13:24:11.63265Z","shell.execute_reply":"2025-04-12T13:24:11.673784Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"        id  client_id  card_brand card_type       card_number  expires  cvv  \\\n6141  5361        185        Amex    Credit   300609782832003  01/2024  663   \n6142  2711        185        Visa    Credit  4718517475996018  01/2021  492   \n6143  1305       1007  Mastercard    Credit  5929512204765914  08/2020  237   \n6144   743       1110  Mastercard     Debit  5589768928167462  01/2020  630   \n6145  3199       1110        Visa    Credit  4994011318343994  12/2020  120   \n\n     has_chip  num_cards_issued credit_limit acct_open_date  \\\n6141      YES                 1        $6900        11/2000   \n6142      YES                 2        $5700        04/2012   \n6143       NO                 2        $9200        02/2012   \n6144      YES                 1       $28074        01/2020   \n6145      YES                 1       $14400        05/2017   \n\n      year_pin_last_changed card_on_dark_web  \n6141                   2013               No  \n6142                   2012               No  \n6143                   2012               No  \n6144                   2020               No  \n6145                   2017               No  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>client_id</th>\n      <th>card_brand</th>\n      <th>card_type</th>\n      <th>card_number</th>\n      <th>expires</th>\n      <th>cvv</th>\n      <th>has_chip</th>\n      <th>num_cards_issued</th>\n      <th>credit_limit</th>\n      <th>acct_open_date</th>\n      <th>year_pin_last_changed</th>\n      <th>card_on_dark_web</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6141</th>\n      <td>5361</td>\n      <td>185</td>\n      <td>Amex</td>\n      <td>Credit</td>\n      <td>300609782832003</td>\n      <td>01/2024</td>\n      <td>663</td>\n      <td>YES</td>\n      <td>1</td>\n      <td>$6900</td>\n      <td>11/2000</td>\n      <td>2013</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>6142</th>\n      <td>2711</td>\n      <td>185</td>\n      <td>Visa</td>\n      <td>Credit</td>\n      <td>4718517475996018</td>\n      <td>01/2021</td>\n      <td>492</td>\n      <td>YES</td>\n      <td>2</td>\n      <td>$5700</td>\n      <td>04/2012</td>\n      <td>2012</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>6143</th>\n      <td>1305</td>\n      <td>1007</td>\n      <td>Mastercard</td>\n      <td>Credit</td>\n      <td>5929512204765914</td>\n      <td>08/2020</td>\n      <td>237</td>\n      <td>NO</td>\n      <td>2</td>\n      <td>$9200</td>\n      <td>02/2012</td>\n      <td>2012</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>6144</th>\n      <td>743</td>\n      <td>1110</td>\n      <td>Mastercard</td>\n      <td>Debit</td>\n      <td>5589768928167462</td>\n      <td>01/2020</td>\n      <td>630</td>\n      <td>YES</td>\n      <td>1</td>\n      <td>$28074</td>\n      <td>01/2020</td>\n      <td>2020</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>6145</th>\n      <td>3199</td>\n      <td>1110</td>\n      <td>Visa</td>\n      <td>Credit</td>\n      <td>4994011318343994</td>\n      <td>12/2020</td>\n      <td>120</td>\n      <td>YES</td>\n      <td>1</td>\n      <td>$14400</td>\n      <td>05/2017</td>\n      <td>2017</td>\n      <td>No</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"cards_data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:25:54.976395Z","iopub.execute_input":"2025-04-12T13:25:54.976716Z","iopub.status.idle":"2025-04-12T13:25:54.988443Z","shell.execute_reply.started":"2025-04-12T13:25:54.97669Z","shell.execute_reply":"2025-04-12T13:25:54.987313Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 6146 entries, 0 to 6145\nData columns (total 13 columns):\n #   Column                 Non-Null Count  Dtype \n---  ------                 --------------  ----- \n 0   id                     6146 non-null   int64 \n 1   client_id              6146 non-null   int64 \n 2   card_brand             6146 non-null   object\n 3   card_type              6146 non-null   object\n 4   card_number            6146 non-null   int64 \n 5   expires                6146 non-null   object\n 6   cvv                    6146 non-null   int64 \n 7   has_chip               6146 non-null   object\n 8   num_cards_issued       6146 non-null   int64 \n 9   credit_limit           6146 non-null   object\n 10  acct_open_date         6146 non-null   object\n 11  year_pin_last_changed  6146 non-null   int64 \n 12  card_on_dark_web       6146 non-null   object\ndtypes: int64(6), object(7)\nmemory usage: 624.3+ KB\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"cards_data['credit_limit'] = (cards_data['credit_limit'].replace(r\"['$']\",'',regex= True)).astype('float32')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:26:11.473349Z","iopub.execute_input":"2025-04-12T13:26:11.473673Z","iopub.status.idle":"2025-04-12T13:26:11.484046Z","shell.execute_reply.started":"2025-04-12T13:26:11.473642Z","shell.execute_reply":"2025-04-12T13:26:11.48264Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"cards_data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:26:16.584434Z","iopub.execute_input":"2025-04-12T13:26:16.584864Z","iopub.status.idle":"2025-04-12T13:26:16.612672Z","shell.execute_reply.started":"2025-04-12T13:26:16.584803Z","shell.execute_reply":"2025-04-12T13:26:16.611467Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"                id    client_id   card_number          cvv  num_cards_issued  \\\ncount  6146.000000  6146.000000  6.146000e+03  6146.000000       6146.000000   \nmean   3072.500000   994.939636  4.820426e+15   506.220794          1.503091   \nstd    1774.341709   578.614626  1.328582e+15   289.431123          0.519191   \nmin       0.000000     0.000000  3.001055e+14     0.000000          1.000000   \n25%    1536.250000   492.250000  4.486365e+15   257.000000          1.000000   \n50%    3072.500000   992.000000  5.108957e+15   516.500000          1.000000   \n75%    4608.750000  1495.000000  5.585237e+15   756.000000          2.000000   \nmax    6145.000000  1999.000000  6.997197e+15   999.000000          3.000000   \n\n        credit_limit  year_pin_last_changed  \ncount    6146.000000            6146.000000  \nmean    14347.494141            2013.436707  \nstd     12014.461914               4.270699  \nmin         0.000000            2002.000000  \n25%      7042.750000            2010.000000  \n50%     12592.500000            2013.000000  \n75%     19156.500000            2017.000000  \nmax    151223.000000            2020.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>client_id</th>\n      <th>card_number</th>\n      <th>cvv</th>\n      <th>num_cards_issued</th>\n      <th>credit_limit</th>\n      <th>year_pin_last_changed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>6146.000000</td>\n      <td>6146.000000</td>\n      <td>6.146000e+03</td>\n      <td>6146.000000</td>\n      <td>6146.000000</td>\n      <td>6146.000000</td>\n      <td>6146.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3072.500000</td>\n      <td>994.939636</td>\n      <td>4.820426e+15</td>\n      <td>506.220794</td>\n      <td>1.503091</td>\n      <td>14347.494141</td>\n      <td>2013.436707</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1774.341709</td>\n      <td>578.614626</td>\n      <td>1.328582e+15</td>\n      <td>289.431123</td>\n      <td>0.519191</td>\n      <td>12014.461914</td>\n      <td>4.270699</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.001055e+14</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>2002.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1536.250000</td>\n      <td>492.250000</td>\n      <td>4.486365e+15</td>\n      <td>257.000000</td>\n      <td>1.000000</td>\n      <td>7042.750000</td>\n      <td>2010.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3072.500000</td>\n      <td>992.000000</td>\n      <td>5.108957e+15</td>\n      <td>516.500000</td>\n      <td>1.000000</td>\n      <td>12592.500000</td>\n      <td>2013.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>4608.750000</td>\n      <td>1495.000000</td>\n      <td>5.585237e+15</td>\n      <td>756.000000</td>\n      <td>2.000000</td>\n      <td>19156.500000</td>\n      <td>2017.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>6145.000000</td>\n      <td>1999.000000</td>\n      <td>6.997197e+15</td>\n      <td>999.000000</td>\n      <td>3.000000</td>\n      <td>151223.000000</td>\n      <td>2020.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"cards_data.isna().sum(axis=0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:26:23.17543Z","iopub.execute_input":"2025-04-12T13:26:23.175732Z","iopub.status.idle":"2025-04-12T13:26:23.18436Z","shell.execute_reply.started":"2025-04-12T13:26:23.175708Z","shell.execute_reply":"2025-04-12T13:26:23.183142Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"id                       0\nclient_id                0\ncard_brand               0\ncard_type                0\ncard_number              0\nexpires                  0\ncvv                      0\nhas_chip                 0\nnum_cards_issued         0\ncredit_limit             0\nacct_open_date           0\nyear_pin_last_changed    0\ncard_on_dark_web         0\ndtype: int64"},"metadata":{}}],"execution_count":21},{"cell_type":"markdown","source":"Inga saknade värden.","metadata":{}},{"cell_type":"markdown","source":"### 1.3. Användardata","metadata":{}},{"cell_type":"code","source":"users_data = pd.read_csv(\"/kaggle/input/transactions-fraud-datasets/users_data.csv\", header =0)\nusers_data.tail(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-12T13:26:40.7912Z","iopub.execute_input":"2025-04-12T13:26:40.791521Z","iopub.status.idle":"2025-04-12T13:26:40.816138Z","shell.execute_reply.started":"2025-04-12T13:26:40.791497Z","shell.execute_reply":"2025-04-12T13:26:40.814931Z"}},"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"        id  current_age  retirement_age  birth_year  birth_month  gender  \\\n1990   932           67              69        1953            2    Male   \n1991   378           18              60        2001            5  Female   \n1992   647           31              72        1988            7  Female   \n1993   391           85              66        1934            7  Female   \n1994   588           21              66        1998            6    Male   \n1995   986           32              70        1987            7    Male   \n1996  1944           62              65        1957           11  Female   \n1997   185           47              67        1973            1  Female   \n1998  1007           66              60        1954            2    Male   \n1999  1110           21              60        1998           11  Female   \n\n                       address  latitude  longitude per_capita_income  \\\n1990           295 West Avenue     32.36     -92.97            $16760   \n1991         512 Second Avenue     46.21    -119.16            $18753   \n1992           27 Birch Avenue     36.52    -119.39            $13194   \n1993         31 Hill Boulevard     33.69     -78.89            $19025   \n1994  2183 Catherine Boulevard     38.47     -90.75            $23106   \n1995       6577 Lexington Lane     40.65     -73.58            $23550   \n1996               2 Elm Drive     38.95     -84.54            $24218   \n1997       276 Fifth Boulevard     40.66     -74.19            $15175   \n1998      259 Valley Boulevard     40.24     -76.92            $25336   \n1999     472 Ocean View Street     42.86     -71.48            $32325   \n\n     yearly_income total_debt  credit_score  num_credit_cards  \n1990        $34172     $71366           811                 6  \n1991        $38241     $81833           596                 1  \n1992        $26900     $74083           758                 2  \n1993        $35270      $1769           731                 6  \n1994        $47109     $76035           844                 3  \n1995        $48010     $87837           703                 3  \n1996        $49378    $104480           740                 4  \n1997        $30942     $71066           779                 3  \n1998        $54654     $27241           618                 1  \n1999        $65909    $181261           673                 2  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>current_age</th>\n      <th>retirement_age</th>\n      <th>birth_year</th>\n      <th>birth_month</th>\n      <th>gender</th>\n      <th>address</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>per_capita_income</th>\n      <th>yearly_income</th>\n      <th>total_debt</th>\n      <th>credit_score</th>\n      <th>num_credit_cards</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1990</th>\n      <td>932</td>\n      <td>67</td>\n      <td>69</td>\n      <td>1953</td>\n      <td>2</td>\n      <td>Male</td>\n      <td>295 West Avenue</td>\n      <td>32.36</td>\n      <td>-92.97</td>\n      <td>$16760</td>\n      <td>$34172</td>\n      <td>$71366</td>\n      <td>811</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>1991</th>\n      <td>378</td>\n      <td>18</td>\n      <td>60</td>\n      <td>2001</td>\n      <td>5</td>\n      <td>Female</td>\n      <td>512 Second Avenue</td>\n      <td>46.21</td>\n      <td>-119.16</td>\n      <td>$18753</td>\n      <td>$38241</td>\n      <td>$81833</td>\n      <td>596</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1992</th>\n      <td>647</td>\n      <td>31</td>\n      <td>72</td>\n      <td>1988</td>\n      <td>7</td>\n      <td>Female</td>\n      <td>27 Birch Avenue</td>\n      <td>36.52</td>\n      <td>-119.39</td>\n      <td>$13194</td>\n      <td>$26900</td>\n      <td>$74083</td>\n      <td>758</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1993</th>\n      <td>391</td>\n      <td>85</td>\n      <td>66</td>\n      <td>1934</td>\n      <td>7</td>\n      <td>Female</td>\n      <td>31 Hill Boulevard</td>\n      <td>33.69</td>\n      <td>-78.89</td>\n      <td>$19025</td>\n      <td>$35270</td>\n      <td>$1769</td>\n      <td>731</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>1994</th>\n      <td>588</td>\n      <td>21</td>\n      <td>66</td>\n      <td>1998</td>\n      <td>6</td>\n      <td>Male</td>\n      <td>2183 Catherine Boulevard</td>\n      <td>38.47</td>\n      <td>-90.75</td>\n      <td>$23106</td>\n      <td>$47109</td>\n      <td>$76035</td>\n      <td>844</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1995</th>\n      <td>986</td>\n      <td>32</td>\n      <td>70</td>\n      <td>1987</td>\n      <td>7</td>\n      <td>Male</td>\n      <td>6577 Lexington Lane</td>\n      <td>40.65</td>\n      <td>-73.58</td>\n      <td>$23550</td>\n      <td>$48010</td>\n      <td>$87837</td>\n      <td>703</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1996</th>\n      <td>1944</td>\n      <td>62</td>\n      <td>65</td>\n      <td>1957</td>\n      <td>11</td>\n      <td>Female</td>\n      <td>2 Elm Drive</td>\n      <td>38.95</td>\n      <td>-84.54</td>\n      <td>$24218</td>\n      <td>$49378</td>\n      <td>$104480</td>\n      <td>740</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1997</th>\n      <td>185</td>\n      <td>47</td>\n      <td>67</td>\n      <td>1973</td>\n      <td>1</td>\n      <td>Female</td>\n      <td>276 Fifth Boulevard</td>\n      <td>40.66</td>\n      <td>-74.19</td>\n      <td>$15175</td>\n      <td>$30942</td>\n      <td>$71066</td>\n      <td>779</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1998</th>\n      <td>1007</td>\n      <td>66</td>\n      <td>60</td>\n      <td>1954</td>\n      <td>2</td>\n      <td>Male</td>\n      <td>259 Valley Boulevard</td>\n      <td>40.24</td>\n      <td>-76.92</td>\n      <td>$25336</td>\n      <td>$54654</td>\n      <td>$27241</td>\n      <td>618</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1999</th>\n      <td>1110</td>\n      <td>21</td>\n      <td>60</td>\n      <td>1998</td>\n      <td>11</td>\n      <td>Female</td>\n      <td>472 Ocean View Street</td>\n      <td>42.86</td>\n      <td>-71.48</td>\n      <td>$32325</td>\n      <td>$65909</td>\n      <td>$181261</td>\n      <td>673</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":22},{"cell_type":"code","source":"## Samma problem med '$'\nusers_data = users_data.replace(r\"['$']\", '', regex = True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.387162Z","iopub.execute_input":"2025-04-11T05:40:54.387575Z","iopub.status.idle":"2025-04-11T05:40:54.401772Z","shell.execute_reply.started":"2025-04-11T05:40:54.387541Z","shell.execute_reply":"2025-04-11T05:40:54.400575Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"users_data['per_capita_income'] = users_data['per_capita_income'].astype('float32')\nusers_data['yearly_income'] = users_data['yearly_income'].astype('float32')\nusers_data['total_debt'] = users_data['total_debt'].astype('float32')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.40286Z","iopub.execute_input":"2025-04-11T05:40:54.403145Z","iopub.status.idle":"2025-04-11T05:40:54.422312Z","shell.execute_reply.started":"2025-04-11T05:40:54.403121Z","shell.execute_reply":"2025-04-11T05:40:54.421181Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"users_data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.423668Z","iopub.execute_input":"2025-04-11T05:40:54.424026Z","iopub.status.idle":"2025-04-11T05:40:54.448752Z","shell.execute_reply.started":"2025-04-11T05:40:54.42399Z","shell.execute_reply":"2025-04-11T05:40:54.447497Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"users_data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.449944Z","iopub.execute_input":"2025-04-11T05:40:54.450312Z","iopub.status.idle":"2025-04-11T05:40:54.499681Z","shell.execute_reply.started":"2025-04-11T05:40:54.450276Z","shell.execute_reply":"2025-04-11T05:40:54.498317Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**Några dubbletter?**","metadata":{}},{"cell_type":"code","source":"users_data.duplicated().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.505913Z","iopub.execute_input":"2025-04-11T05:40:54.506264Z","iopub.status.idle":"2025-04-11T05:40:54.51821Z","shell.execute_reply.started":"2025-04-11T05:40:54.506236Z","shell.execute_reply":"2025-04-11T05:40:54.516978Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**Antal kunder?**","metadata":{}},{"cell_type":"code","source":"len(users_data['id'].unique())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.521164Z","iopub.execute_input":"2025-04-11T05:40:54.521477Z","iopub.status.idle":"2025-04-11T05:40:54.533603Z","shell.execute_reply.started":"2025-04-11T05:40:54.52145Z","shell.execute_reply":"2025-04-11T05:40:54.532252Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 1.4 Data för bedrägeri (i transaktioner)","metadata":{}},{"cell_type":"code","source":"#?pd.read_json","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.534747Z","iopub.execute_input":"2025-04-11T05:40:54.535025Z","iopub.status.idle":"2025-04-11T05:40:54.551352Z","shell.execute_reply.started":"2025-04-11T05:40:54.535001Z","shell.execute_reply":"2025-04-11T05:40:54.55018Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_df = pd.read_json(\"/kaggle/input/transactions-fraud-datasets/train_fraud_labels.json\")\nfraud_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:40:54.552445Z","iopub.execute_input":"2025-04-11T05:40:54.552828Z","iopub.status.idle":"2025-04-11T05:41:11.63449Z","shell.execute_reply.started":"2025-04-11T05:40:54.552779Z","shell.execute_reply":"2025-04-11T05:41:11.63341Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_df.isna().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:11.635505Z","iopub.execute_input":"2025-04-11T05:41:11.635777Z","iopub.status.idle":"2025-04-11T05:41:12.119269Z","shell.execute_reply.started":"2025-04-11T05:41:11.635754Z","shell.execute_reply":"2025-04-11T05:41:12.118179Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_df.value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:12.120442Z","iopub.execute_input":"2025-04-11T05:41:12.120717Z","iopub.status.idle":"2025-04-11T05:41:13.192428Z","shell.execute_reply.started":"2025-04-11T05:41:12.120693Z","shell.execute_reply":"2025-04-11T05:41:13.19134Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Obs: ganska ojämn fördelning av misstänkta bedrägeri\n\n**Ändra objekt till binary för att kunna tillämpa ML**","metadata":{}},{"cell_type":"code","source":"fraud_df['fraud'] = [0 if item == 'No' else 1 for item in fraud_df['target']]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:13.193675Z","iopub.execute_input":"2025-04-11T05:41:13.194082Z","iopub.status.idle":"2025-04-11T05:41:17.057039Z","shell.execute_reply.started":"2025-04-11T05:41:13.194042Z","shell.execute_reply":"2025-04-11T05:41:17.055568Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Andel misstänkta bedrägerier:\")\nf\"{fraud_df['fraud'].sum()/len(fraud_df['fraud'])*100: .2f}%\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:17.058059Z","iopub.execute_input":"2025-04-11T05:41:17.058465Z","iopub.status.idle":"2025-04-11T05:41:17.078433Z","shell.execute_reply.started":"2025-04-11T05:41:17.058421Z","shell.execute_reply":"2025-04-11T05:41:17.077127Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_df.drop('target',axis=1, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:17.079694Z","iopub.execute_input":"2025-04-11T05:41:17.08014Z","iopub.status.idle":"2025-04-11T05:41:17.150144Z","shell.execute_reply.started":"2025-04-11T05:41:17.080095Z","shell.execute_reply":"2025-04-11T05:41:17.148855Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"## Vi behöver index för koppling till transaktionsdata\n\nfraud_df.reset_index(inplace=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:17.151632Z","iopub.execute_input":"2025-04-11T05:41:17.151956Z","iopub.status.idle":"2025-04-11T05:41:17.206863Z","shell.execute_reply.started":"2025-04-11T05:41:17.151927Z","shell.execute_reply":"2025-04-11T05:41:17.205563Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:17.208212Z","iopub.execute_input":"2025-04-11T05:41:17.208564Z","iopub.status.idle":"2025-04-11T05:41:17.219219Z","shell.execute_reply.started":"2025-04-11T05:41:17.208533Z","shell.execute_reply":"2025-04-11T05:41:17.217852Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 2. Bedrägeri och bedragare: en kartläggning\n### 2.1 Koppla ihop transaktioner, Fraud data, kortdata, och användardata","metadata":{}},{"cell_type":"code","source":"## koppla ihop med fraud_data baserd på transaktionsid.\ntrans_full_data1 = pd.merge(trans_data1, fraud_df, left_on='id',right_on = 'index', how = 'left')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:17.220753Z","iopub.execute_input":"2025-04-11T05:41:17.221191Z","iopub.status.idle":"2025-04-11T05:41:28.560116Z","shell.execute_reply.started":"2025-04-11T05:41:17.221149Z","shell.execute_reply":"2025-04-11T05:41:28.558986Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:28.561098Z","iopub.execute_input":"2025-04-11T05:41:28.561342Z","iopub.status.idle":"2025-04-11T05:41:28.568411Z","shell.execute_reply.started":"2025-04-11T05:41:28.561321Z","shell.execute_reply":"2025-04-11T05:41:28.567199Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"cards_data.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:28.569628Z","iopub.execute_input":"2025-04-11T05:41:28.570028Z","iopub.status.idle":"2025-04-11T05:41:28.590641Z","shell.execute_reply.started":"2025-04-11T05:41:28.569938Z","shell.execute_reply":"2025-04-11T05:41:28.589426Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"## Koppla ihop kreditkortdata baserat på kortid.\ntrans_full_data1 = pd.merge(trans_full_data1, cards_data.loc[:,['id','card_brand', 'card_type','has_chip','credit_limit','card_on_dark_web']], left_on='card_id', right_on = 'id', how= 'left',suffixes = (\"_trans\",\"_card\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:28.59198Z","iopub.execute_input":"2025-04-11T05:41:28.592409Z","iopub.status.idle":"2025-04-11T05:41:34.514753Z","shell.execute_reply.started":"2025-04-11T05:41:28.592343Z","shell.execute_reply":"2025-04-11T05:41:34.51343Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:34.515899Z","iopub.execute_input":"2025-04-11T05:41:34.516187Z","iopub.status.idle":"2025-04-11T05:41:34.523184Z","shell.execute_reply.started":"2025-04-11T05:41:34.516162Z","shell.execute_reply":"2025-04-11T05:41:34.522176Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"## Ta bort dubbla indices\ntrans_full_data1.drop(['index','id_card'], axis=1, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:34.524335Z","iopub.execute_input":"2025-04-11T05:41:34.52475Z","iopub.status.idle":"2025-04-11T05:41:36.665184Z","shell.execute_reply.started":"2025-04-11T05:41:34.524714Z","shell.execute_reply":"2025-04-11T05:41:36.66405Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"users_data['debt_to_income'] = users_data['total_debt']/users_data['yearly_income']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:36.66644Z","iopub.execute_input":"2025-04-11T05:41:36.666735Z","iopub.status.idle":"2025-04-11T05:41:36.672974Z","shell.execute_reply.started":"2025-04-11T05:41:36.66671Z","shell.execute_reply":"2025-04-11T05:41:36.671336Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"users_data.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:36.674015Z","iopub.execute_input":"2025-04-11T05:41:36.674437Z","iopub.status.idle":"2025-04-11T05:41:36.697347Z","shell.execute_reply.started":"2025-04-11T05:41:36.674353Z","shell.execute_reply":"2025-04-11T05:41:36.695801Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"## Koppla ihop användardata baserat på client_id\ntrans_full_data1 = pd.merge(trans_full_data1, users_data.loc[:,['id','current_age', 'retirement_age','gender', 'address', 'latitude', 'longitude', 'yearly_income', 'total_debt', 'credit_score', 'num_credit_cards',\n       'debt_to_income']], left_on='client_id', right_on = 'id', how= 'left',suffixes = (\"_trans\",\"_user\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:36.698968Z","iopub.execute_input":"2025-04-11T05:41:36.699417Z","iopub.status.idle":"2025-04-11T05:41:46.451157Z","shell.execute_reply.started":"2025-04-11T05:41:36.699347Z","shell.execute_reply":"2025-04-11T05:41:46.450095Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:46.452368Z","iopub.execute_input":"2025-04-11T05:41:46.45269Z","iopub.status.idle":"2025-04-11T05:41:46.459944Z","shell.execute_reply.started":"2025-04-11T05:41:46.452662Z","shell.execute_reply":"2025-04-11T05:41:46.458782Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1.dropna(subset=['fraud'], inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:46.461194Z","iopub.execute_input":"2025-04-11T05:41:46.46165Z","iopub.status.idle":"2025-04-11T05:41:48.97921Z","shell.execute_reply.started":"2025-04-11T05:41:46.461603Z","shell.execute_reply":"2025-04-11T05:41:48.977959Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1.drop(['id_trans','client_id','card_id','id','zip'], axis=1, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:48.980353Z","iopub.execute_input":"2025-04-11T05:41:48.980722Z","iopub.status.idle":"2025-04-11T05:41:50.554204Z","shell.execute_reply.started":"2025-04-11T05:41:48.980682Z","shell.execute_reply":"2025-04-11T05:41:50.553066Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 2.2 EDA\n\n#### 2.2.1 Bedrägerier","metadata":{}},{"cell_type":"markdown","source":"Bedrägerier i olika datum","metadata":{}},{"cell_type":"code","source":"fraud_by_datum = trans_full_data1.groupby('datum')['fraud'].agg('sum')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:50.55536Z","iopub.execute_input":"2025-04-11T05:41:50.555728Z","iopub.status.idle":"2025-04-11T05:41:51.542207Z","shell.execute_reply.started":"2025-04-11T05:41:50.5557Z","shell.execute_reply":"2025-04-11T05:41:51.541068Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.lineplot(fraud_by_datum)\nplt.title('Antal bedrägerier per dag')\nplt.xlabel('Datum')\nplt.ylabel('Antal')\nplt.xticks(rotation=45)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:51.543434Z","iopub.execute_input":"2025-04-11T05:41:51.543751Z","iopub.status.idle":"2025-04-11T05:41:52.083173Z","shell.execute_reply.started":"2025-04-11T05:41:51.543726Z","shell.execute_reply":"2025-04-11T05:41:52.082062Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Bedrägerier i olika klockslag?","metadata":{}},{"cell_type":"code","source":"def tidsintervall(time):\n    hour = time.hour\n    if 0 <= hour < 4:\n        return 'Tid1 (00:00-03:59)'\n    elif 4 <= hour < 8:\n        return 'Tid2 (04:00-07:59)'\n    elif 8 <= hour < 12:\n        return 'Tid3 (08:00-11:59)'\n    elif 12 <= hour < 16:\n        return 'Tid4 (12:00-15:59)'\n    elif 16 <= hour < 20:\n        return 'Tid5 (16:00-19:59)'\n    elif 20 <= hour < 24:\n        return 'Tid6 (20:00-23:59)'\n\n# Tillämpa funktionen på 'time'-kolumnen och skapa en ny kolumn 'interval'\ntrans_full_data1['tidsinterval'] = trans_full_data1['klocka'].apply(tidsintervall)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:52.084669Z","iopub.execute_input":"2025-04-11T05:41:52.085178Z","iopub.status.idle":"2025-04-11T05:41:56.375495Z","shell.execute_reply.started":"2025-04-11T05:41:52.085128Z","shell.execute_reply":"2025-04-11T05:41:56.372113Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1['year'] = pd.to_datetime(trans_full_data1['datum']).dt.year\ntrans_full_data1['month'] = pd.to_datetime(trans_full_data1['datum']).dt.month\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:56.378062Z","iopub.execute_input":"2025-04-11T05:41:56.378897Z","iopub.status.idle":"2025-04-11T05:41:58.837545Z","shell.execute_reply.started":"2025-04-11T05:41:56.378815Z","shell.execute_reply":"2025-04-11T05:41:58.836344Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data1.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:58.83878Z","iopub.execute_input":"2025-04-11T05:41:58.839183Z","iopub.status.idle":"2025-04-11T05:41:58.846841Z","shell.execute_reply.started":"2025-04-11T05:41:58.839145Z","shell.execute_reply":"2025-04-11T05:41:58.845335Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_by_tid = trans_full_data1.groupby('tidsinterval')['fraud'].agg('sum')\n\nplt.figure(figsize=(10, 6))\nsns.barplot(x=pd.DataFrame(fraud_by_tid).index, y= 'fraud', data=pd.DataFrame(fraud_by_tid))\nplt.title('Antal bedrägerier per tidsintervall')\nplt.ylabel('Antal')\nplt.xticks(rotation=45) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:41:58.848299Z","iopub.execute_input":"2025-04-11T05:41:58.848722Z","iopub.status.idle":"2025-04-11T05:42:00.612988Z","shell.execute_reply.started":"2025-04-11T05:41:58.848685Z","shell.execute_reply":"2025-04-11T05:42:00.611427Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_by_tid_mean = trans_full_data1.groupby('tidsinterval')['fraud'].agg('mean')*100\nfraud_by_tid_mean","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:00.613961Z","iopub.execute_input":"2025-04-11T05:42:00.614368Z","iopub.status.idle":"2025-04-11T05:42:02.309159Z","shell.execute_reply.started":"2025-04-11T05:42:00.614327Z","shell.execute_reply":"2025-04-11T05:42:02.308012Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.barplot(x=pd.DataFrame(fraud_by_tid_mean).index, y= 'fraud', data=pd.DataFrame(fraud_by_tid_mean))\nplt.title('Andel bedrägerier per tidsintervall')\nplt.ylabel('Andel')\nplt.xticks(rotation=45) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:02.310315Z","iopub.execute_input":"2025-04-11T05:42:02.310711Z","iopub.status.idle":"2025-04-11T05:42:02.625909Z","shell.execute_reply.started":"2025-04-11T05:42:02.310684Z","shell.execute_reply":"2025-04-11T05:42:02.624538Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**Andel bedrägeri per år**","metadata":{}},{"cell_type":"code","source":"fraud_by_year = trans_full_data1.groupby('year')['fraud'].agg('mean')\n\nplt.figure(figsize=(10, 6))\nsns.barplot(x=pd.DataFrame(fraud_by_year).index, y= 'fraud', data=pd.DataFrame(fraud_by_year))\nplt.title('Andel bedrägerier per år')\nplt.ylabel('Andel')\nplt.xticks(rotation=45) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:02.627025Z","iopub.execute_input":"2025-04-11T05:42:02.627397Z","iopub.status.idle":"2025-04-11T05:42:03.271554Z","shell.execute_reply.started":"2025-04-11T05:42:02.627337Z","shell.execute_reply":"2025-04-11T05:42:03.270226Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**Andel bedrägeri per månad**","metadata":{}},{"cell_type":"code","source":"fraud_by_month = trans_full_data1.groupby('month')['fraud'].agg('mean')\n\nplt.figure(figsize=(10, 6))\nsns.barplot(x=pd.DataFrame(fraud_by_month).index, y= 'fraud', data=pd.DataFrame(fraud_by_month))\nplt.title('Andel bedrägerier per månad')\nplt.ylabel('Andel')\nplt.xticks(rotation=45) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:03.272931Z","iopub.execute_input":"2025-04-11T05:42:03.273296Z","iopub.status.idle":"2025-04-11T05:42:03.874507Z","shell.execute_reply.started":"2025-04-11T05:42:03.273266Z","shell.execute_reply":"2025-04-11T05:42:03.873316Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Bedrägier i geografi","metadata":{}},{"cell_type":"code","source":"# Att plotta hela dataset tar jättelång tid.\n#sns.scatterplot(x ='latitude', y='longitude', data = trans_full_data1, hue = 'fraud')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:03.875755Z","iopub.execute_input":"2025-04-11T05:42:03.876075Z","iopub.status.idle":"2025-04-11T05:42:03.880806Z","shell.execute_reply.started":"2025-04-11T05:42:03.876047Z","shell.execute_reply":"2025-04-11T05:42:03.879217Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_fraud = trans_full_data1.loc[trans_full_data1['fraud']==1,:]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:03.882359Z","iopub.execute_input":"2025-04-11T05:42:03.882824Z","iopub.status.idle":"2025-04-11T05:42:03.952184Z","shell.execute_reply.started":"2025-04-11T05:42:03.882785Z","shell.execute_reply":"2025-04-11T05:42:03.951021Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sns.scatterplot(x ='latitude', y='longitude', data = trans_fraud)\nplt.title(\"Geografisk fördelning av alla bedrägerier\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:03.95346Z","iopub.execute_input":"2025-04-11T05:42:03.953766Z","iopub.status.idle":"2025-04-11T05:42:04.363879Z","shell.execute_reply.started":"2025-04-11T05:42:03.953738Z","shell.execute_reply":"2025-04-11T05:42:04.362237Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Antal bedrägerier per verksamhetstyp\nfraud_by_mcc = trans_full_data1.groupby('mcc')['fraud'].agg('sum').sort_values(ascending = False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:04.365245Z","iopub.execute_input":"2025-04-11T05:42:04.365634Z","iopub.status.idle":"2025-04-11T05:42:04.608324Z","shell.execute_reply.started":"2025-04-11T05:42:04.365601Z","shell.execute_reply":"2025-04-11T05:42:04.60709Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_by_mcc_20 = pd.DataFrame({'andel': fraud_by_mcc[1:20], 'verktyp': fraud_by_mcc[1:20].index.astype(\"category\")})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:04.609591Z","iopub.execute_input":"2025-04-11T05:42:04.609972Z","iopub.status.idle":"2025-04-11T05:42:04.617573Z","shell.execute_reply.started":"2025-04-11T05:42:04.609935Z","shell.execute_reply":"2025-04-11T05:42:04.616227Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_by_mcc_20","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:04.618708Z","iopub.execute_input":"2025-04-11T05:42:04.619184Z","iopub.status.idle":"2025-04-11T05:42:04.646135Z","shell.execute_reply.started":"2025-04-11T05:42:04.619145Z","shell.execute_reply":"2025-04-11T05:42:04.644795Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.barplot(data=fraud_by_mcc_20, y = 'verktyp',x='andel' )\nplt.suptitle('20 största verksamhetstyper drabbade av bedrägerier')\nplt.title('5300: Wholesale Clubs, 5310: Discount Stores, 4829:Money Transfer')\nplt.xlabel('Antal')\nplt.ylabel('Verksamhetstyp') ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:04.647442Z","iopub.execute_input":"2025-04-11T05:42:04.647805Z","iopub.status.idle":"2025-04-11T05:42:05.205999Z","shell.execute_reply.started":"2025-04-11T05:42:04.647777Z","shell.execute_reply":"2025-04-11T05:42:05.204542Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Andel bedrägerier per verksamhetstyp\nfraud_by_mcc_mean = trans_full_data1.groupby('mcc')['fraud'].agg('mean').sort_values(ascending = False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:05.207317Z","iopub.execute_input":"2025-04-11T05:42:05.207747Z","iopub.status.idle":"2025-04-11T05:42:05.472273Z","shell.execute_reply.started":"2025-04-11T05:42:05.20771Z","shell.execute_reply":"2025-04-11T05:42:05.471013Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fraud_by_mcc_m20 = pd.DataFrame({'andel': fraud_by_mcc_mean[1:20], 'verktyp': fraud_by_mcc_mean[1:20].index.astype(\"category\")})\nfraud_by_mcc_m20","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:05.473676Z","iopub.execute_input":"2025-04-11T05:42:05.474094Z","iopub.status.idle":"2025-04-11T05:42:05.48887Z","shell.execute_reply.started":"2025-04-11T05:42:05.474052Z","shell.execute_reply":"2025-04-11T05:42:05.487549Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.barplot(data=fraud_by_mcc_m20, y = 'verktyp',x='andel' )\nplt.suptitle('20 största verksamhetstyper drabbade av bedrägerier')\nplt.title('5733: Music Stores - Musical Instruments, 3006: Miscellaneous Fabricated Metal Products')\nplt.xlabel('Andel')\nplt.ylabel('Verksamhetstyp') ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:05.490418Z","iopub.execute_input":"2025-04-11T05:42:05.490832Z","iopub.status.idle":"2025-04-11T05:42:06.244219Z","shell.execute_reply.started":"2025-04-11T05:42:05.490785Z","shell.execute_reply":"2025-04-11T05:42:06.242241Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 2.2.2 Bedragare/användare\n\nVi kollar vissa faktorer kopplade till användare. ","metadata":{}},{"cell_type":"code","source":"socio_eko_hue = trans_full_data1.groupby('fraud')[['current_age','yearly_income','debt_to_income']].agg(['mean','std'])\nsocio_eko_hue","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:06.245682Z","iopub.execute_input":"2025-04-11T05:42:06.246109Z","iopub.status.idle":"2025-04-11T05:42:07.350238Z","shell.execute_reply.started":"2025-04-11T05:42:06.246063Z","shell.execute_reply":"2025-04-11T05:42:07.348426Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 2, figsize=(12, 6))\nsns.histplot(trans_full_data1, x='yearly_income', kde=True, hue = 'fraud', ax=axes[0])\naxes[0].set_title('Histogram för inkomst')\nsns.histplot(trans_full_data1, x='debt_to_income', kde=True, hue = 'fraud', ax=axes[1])\naxes[0].set_title('Histogram för köpsummor')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:42:07.351828Z","iopub.execute_input":"2025-04-11T05:42:07.352163Z","iopub.status.idle":"2025-04-11T05:43:33.994765Z","shell.execute_reply.started":"2025-04-11T05:42:07.352133Z","shell.execute_reply":"2025-04-11T05:43:33.9935Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 3. ML och statistik analys för bedrägeiidentifiering: en övning\n\n### Dataset är för stort och vi selekterar slumpmässigt 1/10 data.","metadata":{}},{"cell_type":"code","source":"y0 = trans_full_data1['fraud']\n\n_, indice, _, _ = train_test_split(range(trans_full_data1.shape[0]),y0, test_size=0.1, random_state = 46, stratify = y0)\n\nindice = sorted(indice)\n\ntrans_full_data2 = trans_full_data1.iloc[indice,:]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:43:33.996152Z","iopub.execute_input":"2025-04-11T05:43:33.996549Z","iopub.status.idle":"2025-04-11T05:43:41.942653Z","shell.execute_reply.started":"2025-04-11T05:43:33.996522Z","shell.execute_reply":"2025-04-11T05:43:41.94168Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trans_full_data2.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:43:41.943793Z","iopub.execute_input":"2025-04-11T05:43:41.944054Z","iopub.status.idle":"2025-04-11T05:43:41.950007Z","shell.execute_reply.started":"2025-04-11T05:43:41.944031Z","shell.execute_reply":"2025-04-11T05:43:41.948992Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 3.1 Random Forest","metadata":{}},{"cell_type":"code","source":"len(trans_full_data2['mcc'].unique())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:43:41.951331Z","iopub.execute_input":"2025-04-11T05:43:41.951699Z","iopub.status.idle":"2025-04-11T05:43:41.975949Z","shell.execute_reply.started":"2025-04-11T05:43:41.951665Z","shell.execute_reply":"2025-04-11T05:43:41.974493Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Vilka faktorer ska ingå i ML-analys? \n\n'amount', 'use_chip', 'merchant_state', 'mcc', 'datum', 'klocka','card_brand', 'card_type', 'has_chip', 'credit_limit', 'card_on_dark_web', 'current_age', 'retirement_age', 'gender',  'address', 'latitude', 'longitude', 'yearly_income', 'total_debt', 'credit_score', 'num_credit_cards', 'debt_to_income', 'tidsinterval'. \n\n**Vissa varialber kan inte hanteras på riktigt**: datum, klocka, address. \n\nKategoriska variabler: use_chip (3), merchant_state (172 av 200), mcc(109), card_brand(4), card_type (3), has_chip (2), gender (2), tidsinterval(6).\n\n'card_on_dark_web': bara ett värde \"No\". Ingår inte i analysen.\n\nInga saknade värden längre. Skönt.","metadata":{}},{"cell_type":"code","source":"## Olika encoder för olika kategoriska variabler. LabelEncoder för variabler med många kategorier.\n## Medan OneHotEncoder för variabler med färre kategorier.\n## Två val av Scaler för numeriska variabler också. Ett för ev. Normal-fördelade, och det andra för MinMaxScaler.\n\nNum_var1 = ['amount','current_age', 'retirement_age','latitude', 'longitude','debt_to_income']\nNum_var2 = ['credit_limit','yearly_income', 'total_debt', 'credit_score','num_credit_cards']\nCat_var1 = ['merchant_state', 'mcc','year','month']\nCat_var2 = ['use_chip', 'card_brand', 'card_type', 'has_chip', 'gender', 'tidsinterval']\n\ntotal_pipeline2 = ColumnTransformer(transformers=[\n    ('num1', StandardScaler(), Num_var1),\n    ('num2', MinMaxScaler(), Num_var2),\n    ('cat1', OneHotEncoder(sparse=False,handle_unknown=\"ignore\"), Cat_var1),\n    ('cat2', OneHotEncoder(handle_unknown=\"ignore\"), Cat_var2)\n], remainder=\"passthrough\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:43:41.97713Z","iopub.execute_input":"2025-04-11T05:43:41.977551Z","iopub.status.idle":"2025-04-11T05:43:41.984889Z","shell.execute_reply.started":"2025-04-11T05:43:41.97751Z","shell.execute_reply":"2025-04-11T05:43:41.98352Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**Eftersom vi har ojämna fördelning, väljer \"stratify\" i train_test_split.**","metadata":{}},{"cell_type":"code","source":"y = trans_full_data2['fraud']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:43:41.985951Z","iopub.execute_input":"2025-04-11T05:43:41.986203Z","iopub.status.idle":"2025-04-11T05:43:42.003878Z","shell.execute_reply.started":"2025-04-11T05:43:41.98618Z","shell.execute_reply":"2025-04-11T05:43:42.002492Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(trans_full_data2.loc[:,Num_var1+Num_var2+Cat_var1+Cat_var2],y , test_size=0.2, random_state=46, stratify=y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:43:42.005084Z","iopub.execute_input":"2025-04-11T05:43:42.005544Z","iopub.status.idle":"2025-04-11T05:43:43.453412Z","shell.execute_reply.started":"2025-04-11T05:43:42.005504Z","shell.execute_reply":"2025-04-11T05:43:43.452241Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(datetime.now())\n\nrandom_forest = Pipeline(steps=[ \n    ('preprocess', total_pipeline2),\n    ('rf', RandomForestClassifier(criterion=\"entropy\", n_estimators=300, max_depth=40, random_state=46))\n])\n\nrf_1 = random_forest.fit(X_train, y_train)\nprint(\"RF för träningsdata:\")\nprint(classification_report(y_train, random_forest.predict(X_train)))\n\nprint(datetime.now())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T06:21:09.512722Z","iopub.execute_input":"2025-04-11T06:21:09.513446Z","iopub.status.idle":"2025-04-11T06:35:00.139699Z","shell.execute_reply.started":"2025-04-11T06:21:09.513393Z","shell.execute_reply":"2025-04-11T06:35:00.138046Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_pred = random_forest.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T06:40:47.992922Z","iopub.execute_input":"2025-04-11T06:40:47.99357Z","iopub.status.idle":"2025-04-11T06:41:01.879455Z","shell.execute_reply.started":"2025-04-11T06:40:47.993526Z","shell.execute_reply":"2025-04-11T06:41:01.878255Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"RF för testdata:\")\nprint(confusion_matrix(y_test, y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T06:41:09.779906Z","iopub.execute_input":"2025-04-11T06:41:09.780262Z","iopub.status.idle":"2025-04-11T06:41:09.931688Z","shell.execute_reply.started":"2025-04-11T06:41:09.780236Z","shell.execute_reply":"2025-04-11T06:41:09.930498Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(classification_report(y_test, y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-11T05:54:20.312767Z","iopub.execute_input":"2025-04-11T05:54:20.313118Z","iopub.status.idle":"2025-04-11T05:54:20.752326Z","shell.execute_reply.started":"2025-04-11T05:54:20.313093Z","shell.execute_reply":"2025-04-11T05:54:20.751204Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"'''\n## Antar att varje körning av RF tar bara ca 5 minuter, det kan ta betydligt längre tid med \n## GridSearchCV. T.ex. upplägget nedan kan ta 3*4*3*6/60 = 4,8 timmar att köra. \n\nprint(datetime.now())\ndist_rf = {'rf__max_depth': [20, 40, 60], 'rf__n_estimators': [100, 200, 300, 400] }\n\nrf_chosen = GridSearchCV(random_forest, param_grid=dist_rf, cv=3) \nrf_chosen.fit(X_train, y_train)\n\n\nprint(classification_report(y_test, rf_chosen.predict(X_test)))\n\nprint(datetime.now())\n'''","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T19:26:37.888938Z","iopub.execute_input":"2025-04-10T19:26:37.889397Z","iopub.status.idle":"2025-04-10T23:45:45.754389Z","shell.execute_reply.started":"2025-04-10T19:26:37.889365Z","shell.execute_reply":"2025-04-10T23:45:45.751906Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Bästa parametrar:\", rf_chosen.best_params_)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T23:45:45.758221Z","iopub.execute_input":"2025-04-10T23:45:45.75879Z","iopub.status.idle":"2025-04-10T23:45:45.767235Z","shell.execute_reply.started":"2025-04-10T23:45:45.758649Z","shell.execute_reply":"2025-04-10T23:45:45.766175Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fpi_rf = permutation_importance(estimator=random_forest, X= X_train, y= y_train, n_repeats=8, random_state=46)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T09:47:25.506432Z","iopub.execute_input":"2025-04-10T09:47:25.506825Z","iopub.status.idle":"2025-04-10T10:36:50.075594Z","shell.execute_reply.started":"2025-04-10T09:47:25.506792Z","shell.execute_reply":"2025-04-10T10:36:50.074176Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fpi_rf_df = pd.DataFrame({\n        'permutation importance': fpi_rf['importances_mean'],\n        'feature': X_train.columns\n    }).sort_values('permutation importance', ascending=False)\n\nprint(fpi_rf_df)\n\nsns.barplot(data=fpi_rf_df, y='feature', x='permutation importance')\n\nplt.title('permutation feature importance RF för träningsdata')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T10:36:50.076855Z","iopub.execute_input":"2025-04-10T10:36:50.077196Z","iopub.status.idle":"2025-04-10T10:36:50.561218Z","shell.execute_reply.started":"2025-04-10T10:36:50.077165Z","shell.execute_reply":"2025-04-10T10:36:50.559975Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### 3.2. Logistik regression\n\nVi testar en statistikmetod, logistik regression, från statsmodels. Men Logit-modell kan inte hantera \"Merchant_state\" och \"mcc\", och vi tar bort dem.","metadata":{}},{"cell_type":"code","source":"X = pd.get_dummies(X_train.drop(Cat_var1,axis=1), columns=Cat_var2, drop_first=True)\nX = sm.add_constant(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T10:36:50.562563Z","iopub.execute_input":"2025-04-10T10:36:50.563004Z","iopub.status.idle":"2025-04-10T10:36:51.112741Z","shell.execute_reply.started":"2025-04-10T10:36:50.562973Z","shell.execute_reply":"2025-04-10T10:36:51.1115Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"np.asarray(X)\nX = X.astype(float)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T10:36:51.114202Z","iopub.execute_input":"2025-04-10T10:36:51.114748Z","iopub.status.idle":"2025-04-10T10:36:52.92678Z","shell.execute_reply.started":"2025-04-10T10:36:51.114692Z","shell.execute_reply":"2025-04-10T10:36:52.92543Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"logit_model = sm.Logit(y_train, X)\nresult = logit_model.fit()\nresult.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T10:36:52.928664Z","iopub.execute_input":"2025-04-10T10:36:52.929069Z","iopub.status.idle":"2025-04-10T10:36:56.974813Z","shell.execute_reply.started":"2025-04-10T10:36:52.929035Z","shell.execute_reply":"2025-04-10T10:36:56.973501Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"koef_df = result.summary2().tables[1].round(5)\nkoef_sorted = koef_df.sort_values(by='P>|z|')\nprint(koef_sorted)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T10:36:56.976625Z","iopub.execute_input":"2025-04-10T10:36:56.977115Z","iopub.status.idle":"2025-04-10T10:36:56.991336Z","shell.execute_reply.started":"2025-04-10T10:36:56.977065Z","shell.execute_reply":"2025-04-10T10:36:56.990106Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(f\"Slut vid {datetime.now()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-10T10:36:56.99247Z","iopub.execute_input":"2025-04-10T10:36:56.992928Z","iopub.status.idle":"2025-04-10T10:36:57.012452Z","shell.execute_reply.started":"2025-04-10T10:36:56.992895Z","shell.execute_reply":"2025-04-10T10:36:57.011127Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 4. Sammanfattning\n- Det är ett bra dataset som man kan göra många analyser på.\n- Eftersom data skapades för ett hackathon, är det inte lätt att få till ett bra resultat direkt, oavsett man använder ML eller statistiska metoder.\n- Det finns stor förbättringspotential i lösning för bedrägeriidentifiering, inklusive tune-hyperparametrar, feature engineering, andra ML-metoder såsom XGBoost, Neural Network, osv.\nSkiv gärna några kommentarer!","metadata":{}}]}